DROP TABLE IF EXISTS circuits, constructors, drivers, races, results;

CREATE TABLE circuits (
    circuitid SERIAL PRIMARY KEY,
    circuitref VARCHAR (50) UNIQUE NOT NULL,
    name VARCHAR (100) UNIQUE NOT NULL,
    location VARCHAR (50) NOT NULL,
    country VARCHAR (50) NOT NULL,
    lat double precision,
    lng double precision,
    alt integer,
    url VARCHAR (100)
);

CREATE TABLE constructors (
    constructorid SERIAL PRIMARY KEY,
    constructorref VARCHAR (50) UNIQUE NOT NULL,
    name VARCHAR (100) UNIQUE NOT NULL,
    nationality VARCHAR (50) NOT NULL,
    url VARCHAR (100)
);

CREATE TABLE drivers (
    driverid SERIAL PRIMARY KEY,
    code VARCHAR (50) UNIQUE NOT NULL,
    forename VARCHAR (50) NOT NULL,
    surname VARCHAR (50) NOT NULL,
    dob DATE NOT NULL,
    nationality VARCHAR (50) NOT NULL,
    constructorid integer,
    url VARCHAR (100)
);

CREATE TABLE races (
    raceid SERIAL PRIMARY KEY,
    year integer NOT NULL,
    round integer NOT NULL,
    circuitid integer NOT NULL,
    name VARCHAR (100) NOT NULL,
    date DATE NOT NULL,
    time TIME NOT NULL,
    url VARCHAR (100)
);

CREATE TABLE results (
    resultid SERIAL PRIMARY KEY,
    raceid integer NOT NULL,
    driverid integer NOT NULL,
    grid integer NOT NULL,
    position integer,
    points integer NOT NULL
);

ALTER TABLE ONLY drivers
    ADD CONSTRAINT fk_drivers_constructors FOREIGN KEY (constructorid) REFERENCES constructors(constructorid) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY results
    ADD CONSTRAINT fk_resultados_drivers FOREIGN KEY (driverid) REFERENCES drivers(driverid) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY results
    ADD CONSTRAINT fk_resultados_races FOREIGN KEY (raceid) REFERENCES races(raceid) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY races
    ADD CONSTRAINT races_circuitid_fkey FOREIGN KEY (circuitid) REFERENCES circuits(circuitid);

INSERT INTO circuits (circuitid, circuitref, name, location, country, lat, lng, alt, url) VALUES
(1, 'albert_park', 'Albert Park Grand Prix Circuit', 'Melbourne', 'Australia', -37.8497, 144.968, 10, 'http://en.wikipedia.org/wiki/Melbourne_Grand_Prix_Circuit'),
(2, 'sepang', 'Sepang International Circuit', 'Kuala Lumpur', 'Malaysia', 2.76083, 101.738, 18, 'http://en.wikipedia.org/wiki/Sepang_International_Circuit'),
(3, 'bahrain', 'Bahrain International Circuit', 'Sakhir', 'Bahrain', 26.0325, 50.5106, 7, 'http://en.wikipedia.org/wiki/Bahrain_International_Circuit'),
(4, 'catalunya', 'Circuit de Barcelona-Catalunya', 'Montmeló', 'Spain', 41.57, 2.26111, 109, 'http://en.wikipedia.org/wiki/Circuit_de_Barcelona-Catalunya'),
(5, 'istanbul', 'Istanbul Park', 'Istanbul', 'Turkey', 40.9517, 29.405, 130, 'http://en.wikipedia.org/wiki/Istanbul_Park'),
(6, 'monaco', 'Circuit de Monaco', 'Monte-Carlo', 'Monaco', 43.7347, 7.42056, 7, 'http://en.wikipedia.org/wiki/Circuit_de_Monaco'),
(7, 'villeneuve', 'Circuit Gilles Villeneuve', 'Montreal', 'Canada', 45.5, -73.5228, 13, 'http://en.wikipedia.org/wiki/Circuit_Gilles_Villeneuve'),
(8, 'magny_cours', 'Circuit de Nevers Magny-Cours', 'Magny Cours', 'France', 46.8642, 3.16361, 228, 'http://en.wikipedia.org/wiki/Circuit_de_Nevers_Magny-Cours'),
(9, 'silverstone', 'Silverstone Circuit', 'Silverstone', 'UK', 52.0786, -1.01694, 153, 'http://en.wikipedia.org/wiki/Silverstone_Circuit'),
(10, 'hockenheimring', 'Hockenheimring', 'Hockenheim', 'Germany', 49.3278, 8.56583, 103, 'http://en.wikipedia.org/wiki/Hockenheimring'),
(11, 'hungaroring', 'Hungaroring', 'Budapest', 'Hungary', 47.5789, 19.2486, 264, 'http://en.wikipedia.org/wiki/Hungaroring'),
(14, 'monza', 'Autodromo Nazionale di Monza', 'Monza', 'Italy', 45.6156, 9.28111, 162, 'http://en.wikipedia.org/wiki/Autodromo_Nazionale_Monza'),
(17, 'shanghai', 'Shanghai International Circuit', 'Shanghai', 'China', 31.3389, 121.22, 5, 'http://en.wikipedia.org/wiki/Shanghai_International_Circuit'),
(18, 'interlagos', 'Autódromo José Carlos Pace', 'São Paulo', 'Brazil', -23.7036, -46.6997, 785, 'http://en.wikipedia.org/wiki/Aut%C3%B3dromo_Jos%C3%A9_Carlos_Pace'),
(19, 'indianapolis', 'Indianapolis Motor Speedway', 'Indianapolis', 'USA', 39.795, -86.2347, 223, 'http://en.wikipedia.org/wiki/Indianapolis_Motor_Speedway'),
(20, 'nurburgring', 'Nürburgring', 'Nürburg', 'Germany', 50.3356, 6.9475, 578, 'http://en.wikipedia.org/wiki/N%C3%BCrburgring'),
(21, 'imola', 'Autodromo Enzo e Dino Ferrari', 'Imola', 'Italy', 44.3439, 11.7167, 37, 'http://en.wikipedia.org/wiki/Autodromo_Enzo_e_Dino_Ferrari'),
(22, 'suzuka', 'Suzuka Circuit', 'Suzuka', 'Japan', 34.8431, 136.541, 45, 'http://en.wikipedia.org/wiki/Suzuka_Circuit');

INSERT INTO constructors (constructorid, constructorref, name, nationality, url) VALUES
(1, 'mclaren', 'McLaren', 'British', 'http://en.wikipedia.org/wiki/McLaren'),
(2, 'bmw_sauber', 'BMW Sauber', 'German', 'http://en.wikipedia.org/wiki/BMW_Sauber'),
(3, 'williams', 'Williams', 'British', 'http://en.wikipedia.org/wiki/Williams_Grand_Prix_Engineering'),
(4, 'renault', 'Renault', 'French', 'http://en.wikipedia.org/wiki/Renault_in_Formula_One'),
(5, 'toro_rosso', 'Toro Rosso', 'Italian', 'http://en.wikipedia.org/wiki/Scuderia_Toro_Rosso'),
(6, 'ferrari', 'Ferrari', 'Italian', 'http://en.wikipedia.org/wiki/Scuderia_Ferrari'),
(7, 'toyota', 'Toyota', 'Japanese', 'http://en.wikipedia.org/wiki/Toyota_Racing'),
(8, 'super_aguri', 'Super Aguri', 'Japanese', 'http://en.wikipedia.org/wiki/Super_Aguri_F1'),
(9, 'red_bull', 'Red Bull', 'Austrian', 'http://en.wikipedia.org/wiki/Red_Bull_Racing'),
(11, 'honda', 'Honda', 'Japanese', 'http://en.wikipedia.org/wiki/Honda_Racing_F1'),
(13, 'mf1', 'Midland', 'Russian', 'http://en.wikipedia.org/wiki/Midland_F1_Racing');

INSERT INTO drivers (driverid, code, forename, surname, dob, nationality, constructorid, url) VALUES
(2, 'HEI', 'Nick', 'Heidfeld', '1977-05-10', 'German', 2, 'http://en.wikipedia.org/wiki/Nick_Heidfeld'),
(3, 'ROS', 'Nico', 'Rosberg', '1985-06-27', 'German', 3, 'http://en.wikipedia.org/wiki/Nico_Rosberg'),
(4, 'ALO', 'Fernando', 'Alonso', '1981-07-29', 'Spanish', 4, 'http://en.wikipedia.org/wiki/Fernando_Alonso'),
(8, 'RAI', 'Kimi', 'Raikkonen', '1979-10-17', 'Finnish', 1, 'http://en.wikipedia.org/wiki/Kimi_R%C3%A4ikk%C3%B6nen'),
(9, 'KUB', 'Robert', 'Kubica', '1984-12-07', 'Polish', 2, 'http://en.wikipedia.org/wiki/Robert_Kubica'),
(11, 'SAT', 'Takuma', 'Sato', '1977-01-28', 'Japanese', 8, 'http://en.wikipedia.org/wiki/Takuma_Sato'),
(13, 'MAS', 'Felipe', 'Massa', '1981-04-25', 'Brazilian', 6, 'http://en.wikipedia.org/wiki/Felipe_Massa'),
(14, 'COU', 'David', 'Coulthard', '1971-03-27', 'British', 9, 'http://en.wikipedia.org/wiki/David_Coulthard'),
(15, 'TRU', 'Jarno', 'Trulli', '1974-07-13', 'Italian', 7, 'http://en.wikipedia.org/wiki/Jarno_Trulli'),
(17, 'WEB', 'Mark', 'Webber', '1976-08-27', 'Australian', 3, 'http://en.wikipedia.org/wiki/Mark_Webber_(racing_driver)'),
(18, 'BUT', 'Jenson', 'Button', '1980-01-19', 'British', 11, 'http://en.wikipedia.org/wiki/Jenson_Button'),
(21, 'FIS', 'Giancarlo', 'Fisichella', '1973-01-14', 'Italian', 4, 'http://en.wikipedia.org/wiki/Giancarlo_Fisichella'),
(22, 'BAR', 'Rubens', 'Barrichello', '1972-05-23', 'Brazilian', 11, 'http://en.wikipedia.org/wiki/Rubens_Barrichello'),
(23, 'SCH', 'Ralf', 'Schumacher', '1975-06-30', 'German', 7, 'http://en.wikipedia.org/wiki/Ralf_Schumacher'),
(24, 'LIU', 'Vitantonio', 'Liuzzi', '1980-08-06', 'Italian', 5, 'http://en.wikipedia.org/wiki/Vitantonio_Liuzzi'),
(26, 'SPE', 'Scott', 'Speed', '1983-01-24', 'American', 5, 'http://en.wikipedia.org/wiki/Scott_Speed'),
(27, 'ALB', 'Christijan', 'Albers', '1979-04-16', 'Dutch', 13, 'http://en.wikipedia.org/wiki/Christijan_Albers'),
(29, 'YAM', 'Sakon', 'Yamamoto', '1982-07-09', 'Japanese', 8, 'http://en.wikipedia.org/wiki/Sakon_Yamamoto'),
(30, 'MSC', 'Michael', 'Schumacher', '1969-01-03', 'German', 6, 'http://en.wikipedia.org/wiki/Michael_Schumacher'),
(31, 'MON', 'Juan', 'Pablo Montoya', '1975-09-20', 'Colombian', 1, 'http://en.wikipedia.org/wiki/Juan_Pablo_Montoya'),
(32, 'KLI', 'Christian', 'Klien', '1983-02-07', 'Austrian', 9, 'http://en.wikipedia.org/wiki/Christian_Klien'),
(33, 'TMO', 'Tiago', 'Monteiro', '1976-07-24', 'Portuguese', 13, 'http://en.wikipedia.org/wiki/Tiago_Monteiro'),
(34, 'IDE', 'Yuji', 'Ide', '1975-01-21', 'Japanese', 8, 'http://en.wikipedia.org/wiki/Yuji_Ide'),
(35, 'VIL', 'Jacques', 'Villeneuve', '1971-04-09', 'Canadian', 2, 'http://en.wikipedia.org/wiki/Jacques_Villeneuve'),
(36, 'FMO', 'Franck', 'Montagny', '1978-01-05', 'French', 8, 'http://en.wikipedia.org/wiki/Franck_Montagny'),
(37, 'DLR', 'Pedro', 'de la Rosa', '1971-02-24', 'Spanish', 1, 'http://en.wikipedia.org/wiki/Pedro_de_la_Rosa'),
(38, 'DOO', 'Robert', 'Doornbos', '1981-09-23', 'Dutch', 9, 'http://en.wikipedia.org/wiki/Robert_Doornbos');

INSERT INTO races (raceid, year, round, circuitid, name, date, time, url) VALUES
(53, 2006, 1, 3, 'Bahrain Grand Prix', '2006-03-12', '14:30:00', 'http://en.wikipedia.org/wiki/2006_Bahrain_Grand_Prix'),
(54, 2006, 2, 2, 'Malaysian Grand Prix', '2006-03-19', '15:00:00', 'http://en.wikipedia.org/wiki/2006_Malaysian_Grand_Prix'),
(55, 2006, 3, 1, 'Australian Grand Prix', '2006-04-02', '14:00:00', 'http://en.wikipedia.org/wiki/2006_Australian_Grand_Prix'),
(56, 2006, 4, 21, 'San Marino Grand Prix', '2006-04-23', '14:00:00', 'http://en.wikipedia.org/wiki/2006_San_Marino_Grand_Prix'),
(57, 2006, 5, 20, 'European Grand Prix', '2006-05-07', '14:00:00', 'http://en.wikipedia.org/wiki/2006_European_Grand_Prix'),
(58, 2006, 6, 4, 'Spanish Grand Prix', '2006-05-14', '14:00:00', 'http://en.wikipedia.org/wiki/2006_Spanish_Grand_Prix'),
(59, 2006, 7, 6, 'Monaco Grand Prix', '2006-05-28', '14:00:00', 'http://en.wikipedia.org/wiki/2006_Monaco_Grand_Prix'),
(60, 2006, 8, 9, 'British Grand Prix', '2006-06-11', '12:00:00', 'http://en.wikipedia.org/wiki/2006_British_Grand_Prix'),
(61, 2006, 9, 7, 'Canadian Grand Prix', '2006-06-25', '13:00:00', 'http://en.wikipedia.org/wiki/2006_Canadian_Grand_Prix'),
(62, 2006, 10, 19, 'United States Grand Prix', '2006-07-02', '14:00:00', 'http://en.wikipedia.org/wiki/2006_United_States_Grand_Prix'),
(63, 2006, 11, 8, 'French Grand Prix', '2006-07-16', '14:00:00', 'http://en.wikipedia.org/wiki/2006_French_Grand_Prix'),
(64, 2006, 12, 10, 'German Grand Prix', '2006-07-30', '14:00:00', 'http://en.wikipedia.org/wiki/2006_German_Grand_Prix'),
(65, 2006, 13, 11, 'Hungarian Grand Prix', '2006-08-06', '14:00:00', 'http://en.wikipedia.org/wiki/2006_Hungarian_Grand_Prix'),
(66, 2006, 14, 5, 'Turkish Grand Prix', '2006-08-27', '15:00:00', 'http://en.wikipedia.org/wiki/2006_Turkish_Grand_Prix'),
(67, 2006, 15, 14, 'Italian Grand Prix', '2006-09-10', '14:00:00', 'http://en.wikipedia.org/wiki/2006_Italian_Grand_Prix'),
(68, 2006, 16, 17, 'Chinese Grand Prix', '2006-10-01', '14:00:00', 'http://en.wikipedia.org/wiki/2006_Chinese_Grand_Prix'),
(69, 2006, 17, 22, 'Japanese Grand Prix', '2006-10-08', '14:00:00', 'http://en.wikipedia.org/wiki/2006_Japanese_Grand_Prix'),
(70, 2006, 18, 18, 'Brazilian Grand Prix', '2006-10-22', '14:00:00', 'http://en.wikipedia.org/wiki/2006_Brazilian_Grand_Prix');

INSERT INTO results (resultid, raceid, driverid, grid, position, points) VALUES
(743, 53, 4, 4, 1, 10),
(744, 53, 30, 1, 2, 8),
(745, 53, 8, 22, 3, 6),
(746, 53, 18, 3, 4, 5),
(747, 53, 31, 5, 5, 4),
(748, 53, 17, 7, 6, 3),
(749, 53, 3, 12, 7, 2),
(750, 53, 32, 8, 8, 1),
(751, 53, 13, 2, 9, 0),
(752, 53, 14, 13, 10, 0),
(753, 53, 24, 15, 11, 0),
(754, 53, 2, 10, 12, 0),
(755, 53, 26, 16, 13, 0),
(756, 53, 23, 17, 14, 0),
(757, 53, 22, 6, 15, 0),
(758, 53, 15, 14, 16, 0),
(759, 53, 33, 19, 17, 0),
(760, 53, 11, 20, 18, 0),
(761, 53, 34, 21, NULL, 0),
(762, 53, 35, 11, NULL, 0),
(763, 53, 21, 9, NULL, 0),
(764, 53, 27, 18, NULL, 0),
(765, 54, 21, 1, 1, 10),
(766, 54, 4, 7, 2, 8),
(767, 54, 18, 2, 3, 6),
(768, 54, 31, 5, 4, 5),
(769, 54, 13, 21, 5, 4),
(770, 54, 30, 14, 6, 3),
(771, 54, 35, 10, 7, 2),
(772, 54, 23, 22, 8, 1),
(773, 54, 15, 9, 9, 0),
(774, 54, 22, 20, 10, 0),
(775, 54, 24, 13, 11, 0),
(776, 54, 27, 15, 12, 0),
(777, 54, 33, 16, 13, 0),
(778, 54, 11, 17, 14, 0),
(779, 54, 2, 11, NULL, 0),
(780, 54, 26, 12, NULL, 0),
(781, 54, 34, 18, NULL, 0),
(782, 54, 32, 8, NULL, 0),
(783, 54, 17, 4, NULL, 0),
(784, 54, 14, 19, NULL, 0),
(785, 54, 3, 3, NULL, 0),
(786, 54, 8, 6, NULL, 0),
(787, 55, 4, 3, 1, 10),
(788, 55, 8, 4, 2, 8),
(789, 55, 23, 6, 3, 6),
(790, 55, 2, 8, 4, 5),
(791, 55, 21, 2, 5, 4),
(792, 55, 35, 19, 6, 3),
(793, 55, 22, 16, 7, 2),
(794, 55, 14, 11, 8, 1),
(795, 55, 26, 18, 9, 0),
(796, 55, 18, 1, 10, 0),
(797, 55, 27, 17, 11, 0),
(798, 55, 11, 21, 12, 0),
(799, 55, 34, 22, 13, 0),
(800, 55, 31, 5, NULL, 0),
(801, 55, 33, 20, NULL, 0),
(802, 55, 24, 12, NULL, 0),
(803, 55, 30, 10, NULL, 0),
(804, 55, 17, 7, NULL, 0),
(805, 55, 32, 13, NULL, 0),
(806, 55, 15, 9, NULL, 0),
(807, 55, 3, 14, NULL, 0),
(808, 55, 13, 15, NULL, 0),
(809, 56, 30, 1, 1, 10),
(810, 56, 4, 5, 2, 8),
(811, 56, 31, 7, 3, 6),
(812, 56, 13, 4, 4, 5),
(813, 56, 8, 8, 5, 4),
(814, 56, 17, 10, 6, 3),
(815, 56, 18, 2, 7, 2),
(816, 56, 21, 11, 8, 1),
(817, 56, 23, 6, 9, 0),
(818, 56, 22, 3, 10, 0),
(819, 56, 3, 13, 11, 0),
(820, 56, 35, 12, 12, 0),
(821, 56, 2, 15, 13, 0),
(822, 56, 24, 16, 14, 0),
(823, 56, 26, 18, 15, 0),
(824, 56, 33, 19, 16, 0),
(825, 56, 14, 14, NULL, 0),
(826, 56, 11, 21, NULL, 0),
(827, 56, 32, 17, NULL, 0),
(828, 56, 34, 22, NULL, 0),
(829, 56, 15, 9, NULL, 0),
(830, 56, 27, 20, NULL, 0),
(831, 57, 30, 2, 1, 10),
(832, 57, 4, 1, 2, 8),
(833, 57, 13, 3, 3, 6),
(834, 57, 8, 5, 4, 5),
(835, 57, 22, 4, 5, 4),
(836, 57, 21, 11, 6, 3),
(837, 57, 3, 22, 7, 2),
(838, 57, 35, 9, 8, 1),
(839, 57, 15, 7, 9, 0),
(840, 57, 2, 13, 10, 0),
(841, 57, 26, 17, 11, 0),
(842, 57, 33, 18, 12, 0),
(843, 57, 27, 16, 13, 0),
(844, 57, 23, 10, NULL, 0),
(845, 57, 31, 8, NULL, 0),
(846, 57, 11, 20, NULL, 0),
(847, 57, 36, 21, NULL, 0),
(848, 57, 18, 6, NULL, 0),
(849, 57, 32, 15, NULL, 0),
(850, 57, 17, 19, NULL, 0),
(851, 57, 14, 12, NULL, 0),
(852, 57, 24, 14, NULL, 0),
(853, 58, 4, 1, 1, 10),
(854, 58, 30, 3, 2, 8),
(855, 58, 21, 2, 3, 6),
(856, 58, 13, 4, 4, 5),
(857, 58, 8, 9, 5, 4),
(858, 58, 18, 8, 6, 3),
(859, 58, 22, 5, 7, 2),
(860, 58, 2, 10, 8, 1),
(861, 58, 17, 11, 9, 0),
(862, 58, 15, 7, 10, 0),
(863, 58, 3, 13, 11, 0),
(864, 58, 35, 22, 12, 0),
(865, 58, 32, 14, 13, 0),
(866, 58, 14, 21, 14, 0),
(867, 58, 24, 15, 15, 0),
(868, 58, 33, 17, 16, 0),
(869, 58, 11, 19, 17, 0),
(870, 58, 27, 18, NULL, 0),
(871, 58, 26, 16, NULL, 0),
(872, 58, 23, 6, NULL, 0),
(873, 58, 31, 12, NULL, 0),
(874, 58, 36, 20, NULL, 0),
(875, 59, 4, 1, 1, 10),
(876, 59, 31, 4, 2, 8),
(877, 59, 14, 7, 3, 6),
(878, 59, 22, 5, 4, 5),
(879, 59, 30, 22, 5, 4),
(880, 59, 21, 9, 6, 3),
(881, 59, 2, 15, 7, 2),
(882, 59, 23, 10, 8, 1),
(883, 59, 13, 21, 9, 0),
(884, 59, 24, 12, 10, 0),
(885, 59, 18, 13, 11, 0),
(886, 59, 27, 16, 12, 0),
(887, 59, 26, 18, 13, 0),
(888, 59, 35, 14, 14, 0),
(889, 59, 33, 17, 15, 0),
(890, 59, 36, 20, 16, 0),
(891, 59, 15, 6, 17, 0),
(892, 59, 32, 11, NULL, 0),
(893, 59, 3, 8, NULL, 0),
(894, 59, 8, 3, NULL, 0),
(895, 59, 17, 2, NULL, 0),
(896, 59, 11, 19, NULL, 0),
(897, 60, 4, 1, 1, 10),
(898, 60, 30, 3, 2, 8),
(899, 60, 8, 2, 3, 6),
(900, 60, 21, 5, 4, 5),
(901, 60, 13, 4, 5, 4),
(902, 60, 31, 8, 6, 3),
(903, 60, 2, 9, 7, 2),
(904, 60, 35, 10, 8, 1),
(905, 60, 3, 12, 9, 0),
(906, 60, 22, 6, 10, 0),
(907, 60, 15, 22, 11, 0),
(908, 60, 14, 11, 12, 0),
(909, 60, 24, 13, 13, 0),
(910, 60, 32, 14, 14, 0),
(911, 60, 27, 18, 15, 0),
(912, 60, 33, 16, 16, 0),
(913, 60, 11, 20, 17, 0),
(914, 60, 36, 21, 18, 0),
(915, 60, 18, 19, NULL, 0),
(916, 60, 26, 15, NULL, 0),
(917, 60, 23, 7, NULL, 0),
(918, 60, 17, 17, NULL, 0),
(919, 61, 4, 1, 1, 10),
(920, 61, 30, 5, 2, 8),
(921, 61, 8, 3, 3, 6),
(922, 61, 21, 2, 4, 5),
(923, 61, 13, 10, 5, 4),
(924, 61, 15, 4, 6, 3),
(925, 61, 2, 13, 7, 2),
(926, 61, 14, 22, 8, 1),
(927, 61, 18, 8, 9, 0),
(928, 61, 26, 17, 10, 0),
(929, 61, 32, 12, 11, 0),
(930, 61, 17, 16, 12, 0),
(931, 61, 24, 15, 13, 0),
(932, 61, 33, 18, 14, 0),
(933, 61, 11, 20, 15, 0),
(934, 61, 35, 11, NULL, 0),
(935, 61, 23, 14, NULL, 0),
(936, 61, 31, 7, NULL, 0),
(937, 61, 22, 9, NULL, 0),
(938, 61, 36, 21, NULL, 0),
(939, 61, 3, 6, NULL, 0),
(940, 61, 27, 19, NULL, 0),
(941, 62, 30, 1, 1, 10),
(942, 62, 13, 2, 2, 8),
(943, 62, 21, 3, 3, 6),
(944, 62, 15, 22, 4, 5),
(945, 62, 4, 5, 5, 4),
(946, 62, 22, 4, 6, 3),
(947, 62, 14, 17, 7, 2),
(948, 62, 24, 20, 8, 1),
(949, 62, 3, 21, 9, 0),
(950, 62, 23, 8, NULL, 0),
(951, 62, 27, 14, NULL, 0),
(952, 62, 35, 6, NULL, 0),
(953, 62, 33, 15, NULL, 0),
(954, 62, 11, 18, NULL, 0),
(955, 62, 18, 7, NULL, 0),
(956, 62, 8, 9, NULL, 0),
(957, 62, 2, 10, NULL, 0),
(958, 62, 31, 11, NULL, 0),
(959, 62, 17, 12, NULL, 0),
(960, 62, 26, 13, NULL, 0),
(961, 62, 32, 16, NULL, 0),
(962, 62, 36, 19, NULL, 0),
(963, 63, 30, 1, 1, 10),
(964, 63, 4, 3, 2, 8),
(965, 63, 13, 2, 3, 6),
(966, 63, 23, 5, 4, 5),
(967, 63, 8, 6, 5, 4),
(968, 63, 21, 7, 6, 3),
(969, 63, 37, 8, 7, 2),
(970, 63, 2, 11, 8, 1),
(971, 63, 14, 9, 9, 0),
(972, 63, 26, 14, 10, 0),
(973, 63, 35, 16, 11, 0),
(974, 63, 32, 12, 12, 0),
(975, 63, 24, 22, 13, 0),
(976, 63, 3, 18, 14, 0),
(977, 63, 27, 15, 15, 0),
(978, 63, 36, 20, 16, 0),
(979, 63, 18, 17, NULL, 0),
(980, 63, 17, 10, NULL, 0),
(981, 63, 15, 4, NULL, 0),
(982, 63, 22, 13, NULL, 0),
(983, 63, 33, 19, NULL, 0),
(984, 63, 11, 21, NULL, 0),
(985, 64, 30, 2, 1, 10),
(986, 64, 13, 3, 2, 8),
(987, 64, 8, 1, 3, 6),
(988, 64, 18, 4, 4, 5),
(989, 64, 4, 7, 5, 4),
(990, 64, 21, 5, 6, 3),
(991, 64, 15, 20, 7, 2),
(992, 64, 32, 12, 8, 1),
(993, 64, 23, 8, 9, 0),
(994, 64, 24, 16, 10, 0),
(995, 64, 14, 10, 11, 0),
(996, 64, 26, 19, 12, 0),
(997, 64, 17, 11, NULL, 0),
(998, 64, 11, 17, NULL, 0),
(999, 64, 35, 13, NULL, 0),
(1000, 64, 22, 6, NULL, 0),
(1001, 64, 2, 15, NULL, 0),
(1002, 64, 37, 9, NULL, 0),
(1003, 64, 29, 22, NULL, 0),
(1004, 64, 3, 14, NULL, 0),
(1005, 64, 27, 21, 10, 0),
(1006, 64, 33, 18, 11, 0),
(1007, 65, 18, 14, 1, 10),
(1008, 65, 37, 4, 2, 8),
(1009, 65, 2, 10, 3, 6),
(1010, 65, 22, 3, 4, 5),
(1011, 65, 14, 12, 5, 4),
(1012, 65, 23, 6, 6, 3),
(1013, 65, 13, 2, 7, 2),
(1014, 65, 30, 11, 8, 1),
(1015, 65, 33, 16, 9, 0),
(1016, 65, 27, 22, 10, 0),
(1017, 65, 26, 20, 11, 0),
(1018, 65, 15, 8, 12, 0),
(1019, 65, 11, 19, 13, 0),
(1020, 65, 4, 15, NULL, 0),
(1021, 65, 8, 1, NULL, 0),
(1022, 65, 24, 17, NULL, 0),
(1023, 65, 3, 18, NULL, 0),
(1024, 65, 21, 7, NULL, 0),
(1025, 65, 32, 13, NULL, 0),
(1026, 65, 17, 5, NULL, 0),
(1027, 65, 29, 21, NULL, 0),
(1028, 65, 9, 9, 14, 0),
(1029, 66, 13, 1, 1, 10),
(1030, 66, 4, 3, 2, 8),
(1031, 66, 30, 2, 3, 6),
(1032, 66, 18, 6, 4, 5),
(1033, 66, 37, 11, 5, 4),
(1034, 66, 21, 4, 6, 3),
(1035, 66, 23, 15, 7, 2),
(1036, 66, 22, 13, 8, 1),
(1037, 66, 15, 12, 9, 0),
(1038, 66, 17, 9, 10, 0),
(1039, 66, 32, 10, 11, 0),
(1040, 66, 9, 8, 12, 0),
(1041, 66, 26, 17, 13, 0),
(1042, 66, 2, 5, 14, 0),
(1043, 66, 14, 16, 15, 0),
(1044, 66, 27, 22, NULL, 0),
(1045, 66, 11, 21, 16, 0),
(1046, 66, 3, 14, NULL, 0),
(1047, 66, 29, 20, NULL, 0),
(1048, 66, 24, 18, NULL, 0),
(1049, 66, 8, 7, NULL, 0),
(1050, 66, 33, 19, NULL, 0),
(1051, 67, 30, 2, 1, 10),
(1052, 67, 8, 1, 2, 8),
(1053, 67, 9, 6, 3, 6),
(1054, 67, 21, 9, 4, 5),
(1055, 67, 18, 5, 5, 4),
(1056, 67, 22, 8, 6, 3),
(1057, 67, 15, 11, 7, 2),
(1058, 67, 2, 3, 8, 1),
(1059, 67, 13, 4, 9, 0),
(1060, 67, 17, 19, 10, 0),
(1061, 67, 32, 16, 11, 0),
(1062, 67, 14, 14, 12, 0),
(1063, 67, 26, 15, 13, 0),
(1064, 67, 24, 17, 14, 0),
(1065, 67, 23, 13, 15, 0),
(1066, 67, 11, 21, 16, 0),
(1067, 67, 27, 18, 17, 0),
(1068, 67, 33, 20, NULL, 0),
(1069, 67, 4, 10, NULL, 0),
(1070, 67, 37, 7, NULL, 0),
(1071, 67, 29, 22, NULL, 0),
(1072, 67, 3, 12, NULL, 0),
(1073, 68, 30, 6, 1, 10),
(1074, 68, 4, 1, 2, 8),
(1075, 68, 21, 2, 3, 6),
(1076, 68, 18, 4, 4, 5),
(1077, 68, 37, 7, 5, 4),
(1078, 68, 22, 3, 6, 3),
(1079, 68, 2, 8, 7, 2),
(1080, 68, 17, 14, 8, 1),
(1081, 68, 14, 12, 9, 0),
(1082, 68, 24, 13, 10, 0),
(1083, 68, 3, 15, 11, 0),
(1084, 68, 38, 10, 12, 0),
(1085, 68, 9, 9, 13, 0),
(1086, 68, 26, 11, 14, 0),
(1087, 68, 27, 22, 15, 0),
(1088, 68, 29, 19, 16, 0),
(1089, 68, 23, 16, NULL, 0),
(1090, 68, 13, 20, NULL, 0),
(1091, 68, 15, 17, NULL, 0),
(1092, 68, 33, 18, NULL, 0),
(1093, 68, 8, 5, NULL, 0),
(1094, 68, 11, 21, 17, 0),
(1095, 69, 4, 5, 1, 10),
(1096, 69, 13, 1, 2, 8),
(1097, 69, 21, 6, 3, 6),
(1098, 69, 18, 7, 4, 5),
(1099, 69, 8, 11, 5, 4),
(1100, 69, 15, 4, 6, 3),
(1101, 69, 23, 3, 7, 2),
(1102, 69, 2, 9, 8, 1),
(1103, 69, 9, 12, 9, 0),
(1104, 69, 3, 10, 10, 0),
(1105, 69, 37, 13, 11, 0),
(1106, 69, 22, 8, 12, 0),
(1107, 69, 38, 18, 13, 0),
(1108, 69, 24, 15, 14, 0),
(1109, 69, 11, 20, 15, 0),
(1110, 69, 33, 21, 16, 0),
(1111, 69, 29, 22, 17, 0),
(1112, 69, 26, 19, 18, 0),
(1113, 69, 17, 14, NULL, 0),
(1114, 69, 30, 2, NULL, 0),
(1115, 69, 14, 17, NULL, 0),
(1116, 69, 27, 16, NULL, 0),
(1117, 70, 13, 1, 1, 10),
(1118, 70, 4, 4, 2, 8),
(1119, 70, 18, 14, 3, 6),
(1120, 70, 30, 10, 4, 5),
(1121, 70, 8, 2, 5, 4),
(1122, 70, 21, 6, 6, 3),
(1123, 70, 22, 5, 7, 2),
(1124, 70, 37, 12, 8, 1),
(1125, 70, 9, 9, 9, 0),
(1126, 70, 11, 19, 10, 0),
(1127, 70, 26, 16, 11, 0),
(1128, 70, 38, 22, 12, 0),
(1129, 70, 24, 15, 13, 0),
(1130, 70, 27, 17, 14, 0),
(1131, 70, 33, 21, 15, 0),
(1132, 70, 29, 20, 16, 0),
(1133, 70, 2, 8, 17, 0),
(1134, 70, 14, 18, NULL, 0),
(1135, 70, 15, 3, NULL, 0),
(1136, 70, 23, 7, NULL, 0),
(1137, 70, 17, 11, NULL, 0),
(1138, 70, 3, 13, NULL, 0);

SELECT setval(pg_get_serial_sequence('constructors', 'constructorid'), coalesce(max(constructorid)+1, 1), false) FROM constructors;
SELECT setval(pg_get_serial_sequence('drivers', 'driverid'), coalesce(max(driverid)+1, 1), false) FROM drivers;
SELECT setval(pg_get_serial_sequence('circuits', 'circuitid'), coalesce(max(circuitid)+1, 1), false) FROM circuits;
SELECT setval(pg_get_serial_sequence('races', 'raceid'), coalesce(max(raceid)+1, 1), false) FROM races;
SELECT setval(pg_get_serial_sequence('results', 'resultid'), coalesce(max(resultid)+1, 1), false) FROM results;

CREATE OR REPLACE FUNCTION get_results_by_driver(driver_code VARCHAR)
RETURNS TABLE (
    round INT,
    circuit VARCHAR,
    result INT,
    points INT,
    date DATE
) AS $$
BEGIN
    RETURN QUERY
    SELECT ra.round, ra.name, re.position, re.points, ra.date
    FROM drivers d 
	LEFT JOIN results re ON d.driverid = re.driverid
    JOIN races ra ON re.raceid = ra.raceid
    WHERE d.code = driver_code;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION get_drivers_standings()
RETURNS TABLE (
    driver TEXT,
    points BIGINT
) AS $$
BEGIN
    RETURN QUERY
    SELECT CONCAT_WS(' ', d.forename, d.surname), SUM(r.points)
    FROM drivers d 
	LEFT JOIN results r ON d.driverid = r.driverid
    GROUP BY d.driverid
	ORDER BY SUM(r.points) DESC;
END;
$$ LANGUAGE plpgsql;
